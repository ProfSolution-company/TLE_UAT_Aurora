#Область ПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт 
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(СтандартныеПодсистемыСервер.ВерсияБиблиотеки());	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Наименование = "Печать МХ-3";
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Информация = "Внешняя печатная форма МХ-3 для документа ""уатАктОтгрузки_уэ"". Задача № 2545 Профрешение";
	ПараметрыРегистрации.БезопасныйРежим = Ложь; 
	ПараметрыРегистрации.Назначение = ПолучитьНазначениеОбработки();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Печать МХ-3", "МХ3", ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода(), Ложь, "ПечатьMXL"); 
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

функция ПолучитьНазначениеОбработки() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("Документ.уатАктПриемки_уэ");
	Массив.Добавить("Документ.уатАктОтгрузки_уэ");
	Возврат Массив;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры 

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ТабличныйДокументПечатьМХ3 = ПечатьМХ3(МассивОбъектов); 
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МХ3", Нстр("ru = 'Печать МХ-1'"), ТабличныйДокументПечатьМХ3);
	
КонецПроцедуры

#КонецОбласти 

 #Область ВыводДанныхМХ3

Функция ПечатьМХ3(МассивОбъектов)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;  
	ТабДокумент.АвтоМасштаб = Истина;
	Макет = ПолучитьМакет("МХ3");
	
	Для Каждого мОбъект из МассивОбъектов Цикл 
		СсылкаНаДокумент = мОбъект.Ссылка;
		
		ПечатьШапки(ТабДокумент, Макет, СсылкаНаДокумент); 
		ПечатьСтрок(ТабДокумент, Макет, СсылкаНаДокумент);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ПечатьШапки(ТабДокумент, Макет, СсылкаНаДокумент) 
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.УстановитьПараметр("ТекущийДокумент", СсылкаНаДокумент);
	ЗапросШапка.Текст = "ВЫБРАТЬ
	|	уатАктОтгрузки_уэ.ПР_Контрагент КАК Контрагент,
	|	уатАктОтгрузки_уэ.ПР_Договор.Номер КАК ДоговорКонтрагентаНомер,
	|	уатАктОтгрузки_уэ.ПР_Договор.Дата КАК ДоговорКонтрагентаДата,
	|	уатАктОтгрузки_уэ.Склад.Представление КАК Склад,
	|	уатАктОтгрузки_уэ.Дата КАК Дата,
	|	уатАктОтгрузки_уэ.Номер КАК Номер,
	|	уатАктОтгрузки_уэ.Организация КАК Организация
	|ИЗ
	|	Документ.уатАктОтгрузки_уэ КАК уатАктОтгрузки_уэ
	|ГДЕ
	|	уатАктОтгрузки_уэ.Ссылка = &ТекущийДокумент";   
	
	Шапка = ЗапросШапка.Выполнить().Выбрать(); 
	Шапка.Следующий();  
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ПредставлениеОрганизации = Строка(Шапка.Организация.Наименование);
	
	КодПоОКВЭД  = Строка(Шапка.Организация.КодОКВЭД); 
	ОКПООрганизации = Строка(Шапка.Организация.КодПоОКПО);
	
	Запрос = новый Запрос("ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Ссылка = &Объект");
	Запрос.УстановитьПараметр("Объект", Шапка.Организация);
	Результат = Запрос.Выполнить().Выгрузить();
	Адрс = "";
	Если Результат.Количество() > 0 Тогда
		Адрс = Результат.Получить(0).Представление;
		ПредставлениеОрганизации = ПредставлениеОрганизации + Строка(Адрс);
	КонецЕсли; 
	
	ПредставлениеПокупателя = Строка(Шапка.Контрагент.Наименование);
	Запрос = новый Запрос("ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Ссылка = &Объект");
	Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
	Результат = Запрос.Выполнить().Выгрузить();
	Адрс = "";
	Если Результат.Количество() > 0 Тогда
		Адрс = Результат.Получить(0).Представление;
		ПредставлениеПокупателя = ПредставлениеПокупателя + Строка(Адрс);
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Склад;
	ОбластьМакета.Параметры.ПредставлениеПокупателя = ПредставлениеПокупателя;
	
	ОбластьМакета.Параметры.ДоговорНомер = Шапка.ДоговорКонтрагентаНомер;
	ОбластьМакета.Параметры.ДоговорДата = Шапка.ДоговорКонтрагентаДата;
	ОбластьМакета.Параметры.ОКПООрганизации = ОКПООрганизации;
	ОбластьМакета.Параметры.НомерДокумента = СсылкаНаДокумент.Номер;
	ОбластьМакета.Параметры.ДатаДокумента = СсылкаНаДокумент.Дата;
	
	ТабДокумент.Вывести(ОбластьМакета); 
	
КонецПроцедуры 

Процедура ПечатьСтрок(ТабДокумент, Макет, СсылкаНаДокумент)
	
	ЗапросСтрока = Новый Запрос; 
	ЗапросСтрока.УстановитьПараметр("ТекущийДокумент", СсылкаНаДокумент);
	ЗапросСтрока.Текст = "ВЫБРАТЬ
	|	уатАктОтгрузки_уэГрузы.ГрузовоеМесто КАК Наименование,
	|	уатАктОтгрузки_уэГрузы.ПР_ВесНетто КАК ВесНетто,
	|	уатАктОтгрузки_уэГрузы.ВесБрутто КАК ВесБрутто,
	|	уатАктОтгрузки_уэГрузы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	уатАктОтгрузки_уэГрузы.ГрузовоеМесто.Артикул КАК КодТовара,
	|	уатАктОтгрузки_уэГрузы.ГрузовоеМесто.уатВидУпаковкиОсновной КАК ВидУпаковки,
	|	уатАктОтгрузки_уэГрузы.ГрузовоеМесто.уатКоличествоВОсновнойУпаковке КАК КоличествоВОсновнойУпаковке,
	|	уатАктОтгрузки_уэГрузы.КоличествоМест КАК КоличествоМест,
	|	уатАктОтгрузки_уэГрузы.Количество КАК Количество,
	|	уатАктОтгрузки_уэГрузы.ГрузовоеМесто.НаименованиеПолное КАК ПолноеНаименование
	|ИЗ
	|	Документ.уатАктОтгрузки_уэ.Грузы КАК уатАктОтгрузки_уэГрузы
	|ГДЕ
	|	уатАктОтгрузки_уэГрузы.Ссылка = &ТекущийДокумент";
	Строки = ЗапросСтрока.Выполнить().Выгрузить();
	
	ОбластьМакетаСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаВсего = Макет.ПолучитьОбласть("Всего");
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	
	КоличествоСтрок = Строки.Количество();
	
	НомерПоПорядку = 1;
	НомерСтроки = 1;
	
	ИтогоВес = 0;
	ВсегоВес = 0;
	
	ИтогоУпаковка = 0;
	ВсегоУпаковка = 0;   
	
	ИтогоНетто = 0;
	ВсегоНетто = 0;
	
	ИтогоБрутто = 0;
	ВсегоБрутто = 0;
	
	
	Для Каждого Текущий Из Строки Цикл 
		СтрокаСПодвалом = Новый Массив;
		Если НомерСтроки = 1 Тогда
			СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); 
		КонецЕсли;
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтроки);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
		Если НомерСтроки = КоличествоСтрок Тогда           
			СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 1 Тогда
				
				ОбластьМакетаИтого.Параметры.ИтогоУпаковка       = ИтогоУпаковка;
				ОбластьМакетаИтого.Параметры.ИтогоВес = ИтогоВес;
				ОбластьМакетаИтого.Параметры.ИтогоНетто = ИтогоНетто;
				ОбластьМакетаИтого.Параметры.ИтогоБрутто = ИтогоБрутто;
				ТабДокумент.Вывести(ОбластьМакетаИтого);
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ИтогоУпаковка = 0;
				ИтогоВес = 0; 
				ИтогоНетто = 0;
				ИтогоБрутто = 0;
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакетаСтроки.Параметры.НомерПоПорядку = НомерПоПорядку;
		
		ОбластьМакетаСтроки.Параметры.НаименованиеНоменклатуры = Текущий.ПолноеНаименование;
		ОбластьМакетаСтроки.Параметры.КодТовара = Текущий.КодТовара; 
		ОбластьМакетаСтроки.Параметры.КоличествоВОсновнойУпаковке = Текущий.КоличествоВОсновнойУпаковке;
		
		ОбластьМакетаСтроки.Параметры.ВидУпаковкиНаименование = Текущий.ВидУпаковки; 
		ОбластьМакетаСтроки.Параметры.КоличествоМест = Текущий.Количество;  
		ОбластьМакетаСтроки.Параметры.ВесНетто = Текущий.ВесНетто;
		ОбластьМакетаСтроки.Параметры.ВесБрутто = Текущий.ВесБрутто;
		
		ОбластьМакетаСтроки.Параметры.ЕдиницыИзмеренияНаименование = Текущий.ЕдиницаИзмерения;
		ТабДокумент.Вывести(ОбластьМакетаСтроки);
		НомерПоПорядку = НомерПоПорядку + 1;
		
		ВсегоУпаковка =   ВсегоУпаковка +  Текущий.Количество; 
		ИтогоУпаковка =   ИтогоУпаковка +  Текущий.Количество;
		
		ВсегоНетто =   ВсегоНетто +  Текущий.ВесНетто; 
		ИтогоНетто =   ИтогоНетто +  Текущий.ВесНетто;
		
		ВсегоБрутто =   ВсегоБрутто +  Текущий.ВесБрутто; 
		ИтогоБрутто =   ИтогоБрутто +  Текущий.ВесБрутто;
		
		ВсегоВес =   ВсегоВес +  Текущий.КоличествоВОсновнойУпаковке; 
		ИтогоВес =   ИтогоВеС +  Текущий.КоличествоВОсновнойУпаковке;
		
		ОбластьМакетаВсего.Параметры.ВсегоУпаковка = ВсегоУпаковка;
		ОбластьМакетаИтого.Параметры.ИтогоУпаковка = ИтогоУпаковка; 
		
		ОбластьМакетаВсего.Параметры.ВсегоНетто = ВсегоНетто;
		ОбластьМакетаИтого.Параметры.ИтогоНетто = ИтогоНетто;
		
		ОбластьМакетаВсего.Параметры.ВсегоБрутто = ВсегоБрутто;
		ОбластьМакетаИтого.Параметры.ИтогоБрутто = ИтогоБрутто;
		
		ОбластьМакетаВсего.Параметры.ВсегоВес = ВсегоВес;
		ОбластьМакетаИтого.Параметры.ИтогоВеС = ИтогоВеС;
		
	КонецЦикла; 
	
	ТабДокумент.Вывести(ОбластьМакетаВсего);
	ТабДокумент.Вывести(ОбластьМакетаИтого); 
	ПечатьПодвала(ТабДокумент, Макет, СсылкаНаДокумент);
	
КонецПроцедуры

Процедура ПечатьПодвала(ТабДокумент, Макет, СсылкаНаДокумент)
	
	ЗапросПодвал = Новый Запрос;
	ЗапросПодвал.УстановитьПараметр("ТекущийДокумент", СсылкаНаДокумент);
	ЗапросПодвал.Текст = "ВЫБРАТЬ
	|	уатАктОтгрузки_уэ.Отпустил.Наименование КАК РасшифровкаПодписиСдал,
	|	уатАктОтгрузки_уэ.Отпустил.Должность КАК ДолжностьСдал,
	|	уатАктОтгрузки_уэ.Получил.Наименование КАК РасшифровкаПодписиПринял,
	|	уатАктОтгрузки_уэ.Получил.Должность КАК ДолжностьПринял
	|ИЗ
	|	Документ.уатАктОтгрузки_уэ КАК уатАктОтгрузки_уэ
	|ГДЕ
	|	уатАктОтгрузки_уэ.Ссылка = &ТекущийДокумент"; 
	Подвал = ЗапросПодвал.Выполнить().Выбрать(); 
	Подвал.Следующий();
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьМакета.Параметры.ДолжностьСдал = Подвал.ДолжностьСдал;
	ОбластьМакета.Параметры.ДолжностьПринял = Подвал.ДолжностьПринял;
	ОбластьМакета.Параметры.РасшифровкаПодписиСдал = Подвал.РасшифровкаПодписиСдал;
	ОбластьМакета.Параметры.РасшифровкаПодписиПринял = Подвал.РасшифровкаПодписиПринял;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

#КонецОбласти

